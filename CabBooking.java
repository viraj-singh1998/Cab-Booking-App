/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cabs;

import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.lang.*;
/**
 *
 * @author viraj
 */
public class CabBooking extends javax.swing.JFrame {
    Connection connect=null;
    String userid;
    String p="";
    String d="";
   // int t = pickUp.getSelectedIndex();
    String[] arr = new String[]{"Select","Panipat","Pilibhit","Faridabad","Ajmer","Jodhpur","Hyderabad","Bangalore","Delhi","Jammu","SriGanganagar","Khandwa","Mumbai","Jaipur","Saharanpur","Vadodara","Kanpur","Jharsuguda","Chandigarh","Ludhiana","Rohtak"};
    //String p = arr[pickUp.getSelectedIndex()];
    /**
     * Creates new form CabBooking
     */
   
    public CabBooking(String user) {
        userid = user;
        //System.out.println("user is" + userid);
        connect = userdb.dbconnect();
        this.setLocationRelativeTo(null);
        initComponents();
        
        /*switch(pickUp.getSelectedIndex()){
        case 1:
            pick="Chennai";
            break;
            }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        confirm = new javax.swing.JButton();
        previous = new javax.swing.JButton();
        pickUp = new javax.swing.JComboBox<>();
        dropOff = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Pick Up Point");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 100, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Drop Off Point");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 192, 110, -1));

        confirm.setBackground(new java.awt.Color(0, 0, 153));
        confirm.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confirm.setForeground(new java.awt.Color(255, 255, 255));
        confirm.setText("Confirm Details");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });
        getContentPane().add(confirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, -1, -1));

        previous.setBackground(new java.awt.Color(0, 0, 153));
        previous.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        previous.setForeground(new java.awt.Color(255, 255, 255));
        previous.setText("Return to previos page");
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });
        getContentPane().add(previous, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, 160, -1));

        pickUp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Panipat", "Pilibhit", "Faridabad", "Ajmer", "Jodhpur", "Hyderabad", "Bangalore", "Delhi", "Jammu", "SriGanganagar", "Khandwa", "Mumbai", "Jaipur", "Saharanpur", "Vadodara", "Kanpur", "Jharsuguda", "Chandigarh", "Ludhiana", "Rohtak" }));
        pickUp.setToolTipText("");
        pickUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickUpActionPerformed(evt);
            }
        });
        getContentPane().add(pickUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, -1, -1));

        dropOff.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Panipat", "Pilibhit", "Faridabad", "Ajmer", "Jodhpur", "Hyderabad", "Bangalore", "Delhi", "Jammu", "SriGanganagar", "Khandwa", "Mumbai", "Jaipur", "Saharanpur", "Vadodara", "Kanpur", "Jharsuguda", "Chandigarh", "Ludhiana", "Rohtak" }));
        getContentPane().add(dropOff, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, -1, -1));

        jLabel3.setFont(new java.awt.Font("Calibri Light", 3, 22)); // NOI18N
        jLabel3.setText("Request A Cab");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cabs/timeless-treasures-new-york-city-taxi-cabs-black-fabric-Lg.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 270, 410));

        jLabel5.setBackground(new java.awt.Color(255, 153, 0));
        jLabel5.setText("jLabel5");
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, 0, 530, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
       String d_main = "", d_temp = "";
      
       int driver_loc = 0;
       int pickup_loc = 0;
       int dropoff_loc = 0;
       
        p = arr[pickUp.getSelectedIndex()];
        d = arr[dropOff.getSelectedIndex()];
        
        boolean flag = true;
        if(p.equals("Select") || d.equals("Select")){
            if(p.equals("Select"))
            {
                JOptionPane.showMessageDialog(null,"Pick up field is empty.");
                flag = false;
            }
            else if(d.equals("Select"))
            {
                JOptionPane.showMessageDialog(null,"Drop Off field is empty.");
                flag = false;
            }
        }
        
        if(p.equals(d))
        {
            flag = false;
            JOptionPane.showMessageDialog(null,"You are already at this location.");
        }
        
        if(flag){
            try{          
            String query1="UPDATE user SET pickup=? WHERE username=?";
            PreparedStatement abc=connect.prepareStatement(query1);
            abc.setString(1, p);
            abc.setString(2, userid);
            abc.executeUpdate();
            
            String query2="UPDATE user SET dropoff=? WHERE username=?";
            PreparedStatement def=connect.prepareStatement(query2);
            def.setString(1, d);
            def.setString(2, userid);
            def.executeUpdate();
            abc.close();
            def.close();
            } 
            catch (SQLException ex) 
            {
            
            }  
        }
        int c = 0;
        int c_arr = 0;
        int r1 = 0, r2 = 0;
        int min_distance = 100;
        int cur_distance=0;
        int j=0,k=0;
        while(j<21){
            if(arr[j].equals(p))
            {
                pickup_loc = j;
                break;
             }
             j++;
         }
         while(k<21){
             if(arr[k].equals(d))
                {    
                 dropoff_loc = k;
                 break;
                }
                k++;
                }    
        if(flag){
            String sql="Select * from driver where dstatus = ? ";
            try {
                PreparedStatement pst=connect.prepareStatement(sql);
                pst.setString(1, String.valueOf(0));
                ResultSet rs=pst.executeQuery();
                while(rs.next()) // for next row of driver table.
                {
                int i = 0;
                while(i<21) {
                    if(arr[i].equals(rs.getString("dlocation")))
                    {
                        driver_loc = i;
                        break;
                    }
                    i++;
                }
            
            //System.out.println(i);
           // System.out.println(j);
           // System.out.println("after i j");
           //System.out.println("pick is :" + arr[pickup_loc]);
           //System.out.println("drop is :" + arr[dropoff_loc]);
           //System.out.println("driver_loc is :" +arr[driver_loc]);
                cur_distance = Math.abs(driver_loc - pickup_loc); 
                    
               // System.out.println(cur_distance);                       
                    if(cur_distance < min_distance){
                        min_distance = cur_distance;
                        d_main = rs.getString("dusername");
                        r1 = Integer.valueOf(rs.getString("drating"));
                    }
                    else if(cur_distance == min_distance){
                       d_temp = rs.getString("dusername");
                       r2 = Integer.valueOf(rs.getString("drating"));
                       if(r1 < r2)
                       {
                            d_main = d_temp;
                       }
               
                    }
                    
                }   
                  //System.out.println("driver name is :"+ d_main);
                  pst.close();
                  rs.close();
                }
                catch (SQLException ex) {
            System.out.println(ex.getMessage());
                 
            } 
               
        } 
                
        
       
        if(flag){
        this.setVisible(false);
        new DriverDetails(userid, arr, d_main, min_distance, Math.abs(dropoff_loc-pickup_loc), d).setVisible(true);
        }
    }//GEN-LAST:event_confirmActionPerformed

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new RequestCab(userid, "", 0, 0).setVisible(true);
    }//GEN-LAST:event_previousActionPerformed

    private void pickUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickUpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pickUpActionPerformed

    /**
     * @param args the command line arguments
     */
    public void arr() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CabBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CabBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CabBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CabBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CabBooking(userid).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirm;
    private javax.swing.JComboBox<String> dropOff;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> pickUp;
    private javax.swing.JButton previous;
    // End of variables declaration//GEN-END:variables
}
